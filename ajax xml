●	Create an XML file containing a list of products, each with details like name, category, price, and image URL. Use AJAX to fetch and display the products, and allow users to filter the products by category.
<?xml version="1.0" encoding="UTF-8"?>
<products>
    <product>
        <name>Product 1</name>
        <category>Electronics</category>
        <price>299.99</price>
        <image>images/product1.jpg</image>
    </product>
    <product>
        <name>Product 2</name>
        <category>Electronics</category>
        <price>99.99</price>
        <image>images/product2.jpg</image>
    </product>
    <product>
        <name>Product 3</name>
        <category>Books</category>
        <price>19.99</price>
        <image>images/product3.jpg</image>
    </product>
    <product>
        <name>Product 4</name>
        <category>Books</category>
        <price>29.99</price>
        <image>images/product4.jpg</image>
    </product>
    <product>
        <name>Product 5</name>
        <category>Clothing</category>
        <price>49.99</price>
        <image>images/product5.jpg</image>
    </product>
</products>
 <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
            text-align: center;
        }
        .product img {
            max-width: 100px;
            height: auto;
        }
    </style>
</head>
<body>
    <h1>Product List</h1>
    <label for="category">Filter by category:</label>
    <select id="category" onchange="fetchAndDisplayProducts()">
        <option value="all">All</option>
        <option value="Electronics">Electronics</option>
        <option value="Books">Books</option>
        <option value="Clothing">Clothing</option>
    </select>
    <div id="products"></div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            fetchAndDisplayProducts();
        });

        function fetchAndDisplayProducts() {
            const category = document.getElementById('category').value;
            const xhr = new XMLHttpRequest();
            xhr.open('GET', 'products.xml', true);
            xhr.onreadystatechange = function() {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    const products = xhr.responseXML.getElementsByTagName('product');
                    let output = '';
                    for (let i = 0; i < products.length; i++) {
                        const name = products[i].getElementsByTagName('name')[0].textContent;
                        const cat = products[i].getElementsByTagName('category')[0].textContent;
                        const price = products[i].getElementsByTagName('price')[0].textContent;
                        const image = products[i].getElementsByTagName('image')[0].textContent;

                        if (category === 'all' || category === cat) {
                            output += `
                                <div class="product">
                                    <h2>${name}</h2>
                                    <p>Category: ${cat}</p>
                                    <p>Price: $${price}</p>
                                    <img src="${image}" alt="${name}">
                                </div>
                            `;
                        }
                    }
                    document.getElementById('products').innerHTML = output;
                }
            };
            xhr.send();
        }
    </script>
</body>
</html>

●	Create an XML file containing a 5-day weather forecast for different cities, including details like date, temperature, humidity, and description. Use AJAX to fetch and display the weather forecast for a selected city.
<?xml version="1.0" encoding="UTF-8"?>
<weather>
    <city name="New York">
        <forecast>
            <date>2024-05-19</date>
            <temperature>22°C</temperature>
            <humidity>60%</humidity>
            <description>Sunny</description>
        </forecast>
        <forecast>
            <date>2024-05-20</date>
            <temperature>24°C</temperature>
            <humidity>65%</humidity>
            <description>Partly Cloudy</description>
        </forecast>
        <forecast>
            <date>2024-05-21</date>
            <temperature>20°C</temperature>
            <humidity>70%</humidity>
            <description>Rainy</description>
        </forecast>
        <forecast>
            <date>2024-05-22</date>
            <temperature>18°C</temperature>
            <humidity>75%</humidity>
            <description>Thunderstorms</description>
        </forecast>
        <forecast>
            <date>2024-05-23</date>
            <temperature>21°C</temperature>
            <humidity>65%</humidity>
            <description>Sunny</description>
        </forecast>
    </city>
    <city name="Los Angeles">
        <forecast>
            <date>2024-05-19</date>
            <temperature>25°C</temperature>
            <humidity>50%</humidity>
            <description>Sunny</description>
        </forecast>
        <forecast>
            <date>2024-05-20</date>
            <temperature>27°C</temperature>
            <humidity>55%</humidity>
            <description>Sunny</description>
        </forecast>
        <forecast>
            <date>2024-05-21</date>
            <temperature>26°C</temperature>
            <humidity>50%</humidity>
            <description>Cloudy</description>
        </forecast>
        <forecast>
            <date>2024-05-22</date>
            <temperature>24°C</temperature>
            <humidity>60%</humidity>
            <description>Partly Cloudy</description>
        </forecast>
        <forecast>
            <date>2024-05-23</date>
            <temperature>22°C</temperature>
            <humidity>55%</humidity>
            <description>Sunny</description>
        </forecast>
    </city>
    <city name="Chicago">
        <forecast>
            <date>2024-05-19</date>
            <temperature>20°C</temperature>
            <humidity>65%</humidity>
            <description>Cloudy</description>
        </forecast>
        <forecast>
            <date>2024-05-20</date>
            <temperature>22°C</temperature>
            <humidity>70%</humidity>
            <description>Partly Cloudy</description>
        </forecast>
        <forecast>
            <date>2024-05-21</date>
            <temperature>18°C</temperature>
            <humidity>75%</humidity>
            <description>Rainy</description>
        </forecast>
        <forecast>
            <date>2024-05-22</date>
            <temperature>19°C</temperature>
            <humidity>80%</humidity>
            <description>Thunderstorms</description>
        </forecast>
        <forecast>
            <date>2024-05-23</date>
            <temperature>21°C</temperature>
            <humidity>70%</humidity>
            <description>Sunny</description>
        </forecast>
    </city>
</weather>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Weather Forecast</title>
    <style>
        .forecast {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
        }
        .forecast h3 {
            margin: 0;
        }
    </style>
</head>
<body>
    <h1>5-Day Weather Forecast</h1>
    <label for="city">Select City:</label>
    <select id="city" onchange="fetchAndDisplayWeather()">
        <option value="">Select a city</option>
        <option value="New York">New York</option>
        <option value="Los Angeles">Los Angeles</option>
        <option value="Chicago">Chicago</option>
    </select>
    <div id="weather"></div>

    <script>
        function fetchAndDisplayWeather() {
            const city = document.getElementById('city').value;
            if (!city) {
                document.getElementById('weather').innerHTML = '';
                return;
            }

            const xhr = new XMLHttpRequest();
            xhr.open('GET', 'weather.xml', true);
            xhr.onreadystatechange = function() {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    const xml = xhr.responseXML;
                    const cityData = xml.querySelector(`city[name="${city}"]`);
                    const forecasts = cityData.getElementsByTagName('forecast');
                    let output = '';
                    for (let i = 0; i < forecasts.length; i++) {
                        const date = forecasts[i].getElementsByTagName('date')[0].textContent;
                        const temperature = forecasts[i].getElementsByTagName('temperature')[0].textContent;
                        const humidity = forecasts[i].getElementsByTagName('humidity')[0].textContent;
                        const description = forecasts[i].getElementsByTagName('description')[0].textContent;

                        output += `
                            <div class="forecast">
                                <h3>${date}</h3>
                                <p>Temperature: ${temperature}</p>
                                <p>Humidity: ${humidity}</p>
                                <p>Description: ${description}</p>
                            </div>
                        `;
                    }
                    document.getElementById('weather').innerHTML = output;
                }
            };
            xhr.send();
        }
    </script>
</body>
</html>
3)●	Build a movie database search application that retrieves movie information from an XML file using AJAX. Allow users to search for movies by title, genre, or release year.
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Movie Database Search</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <h1>Movie Database Search</h1>
    <label for="title">Search by Title:</label>
    <input type="text" id="title" oninput="searchMovies()">
    <label for="genre">Search by Genre:</label>
    <input type="text" id="genre" oninput="searchMovies()">
    <label for="year">Search by Release Year:</label>
    <input type="number" id="year" min="1900" max="2099" oninput="searchMovies()">
    <div id="searchResults"></div>

    <script>
        function searchMovies() {
            const title = document.getElementById('title').value.toLowerCase();
            const genre = document.getElementById('genre').value.toLowerCase();
            const year = document.getElementById('year').value;

            const xhr = new XMLHttpRequest();
            xhr.open('GET', 'movies.xml', true);
            xhr.onreadystatechange = function() {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    const xml = xhr.responseXML;
                    const movies = xml.getElementsByTagName('movie');
                    let searchResults = '';
                    for (let i = 0; i < movies.length; i++) {
                        const movieTitle = movies[i].getElementsByTagName('title')[0].textContent.toLowerCase();
                        const movieGenre = movies[i].getElementsByTagName('genre')[0].textContent.toLowerCase();
                        const movieYear = movies[i].getElementsByTagName('year')[0].textContent;

                        if (movieTitle.includes(title) && movieGenre.includes(genre) && movieYear.includes(year)) {
                            searchResults += `
                                <div>
                                    <h2>${movieTitle}</h2>
                                    <p>Genre: ${movieGenre}</p>
                                    <p>Year: ${movieYear}</p>
                                    <!-- Add more details if needed -->
                                </div>
                                <hr>
                            `;
                        }
                    }
                    document.getElementById('searchResults').innerHTML = searchResults;
                }
            };
            xhr.send();
        }
    </script>
</body>
</html>
<?xml version="1.0" encoding="UTF-8"?>
<movies>
    <movie>
        <title>The Shawshank Redemption</title>
        <genre>Drama</genre>
        <year>1994</year>
        <!-- Add more movie details if needed -->
    </movie>
    <movie>
        <title>The Godfather</title>
        <genre>Crime</genre>
        <year>1972</year>
    </movie>
    <!-- Add more movies here -->
</movies>
